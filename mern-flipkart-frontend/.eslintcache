[{"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/index.js":"1","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/reportWebVitals.js":"2","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/App.js":"3","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/index.js":"4","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/index.js":"5","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/HomePage/index.jsx":"6","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/index.jsx":"7","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/index.js":"8","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/auth.reducers.js":"9","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/userauth.reducers.js":"10","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/product.reducer.js":"11","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/category.reducer.js":"12","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/order.reducer.js":"13","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/initialData.reducers.js":"14","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/getProductsBySlug.js":"15","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/urlConfig.js":"16","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/auth.actions.js":"17","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/userauth.actions.js":"18","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/category.action.js":"19","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/product.action.js":"20","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/order.action.js":"21","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Loading.jsx":"22","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/Layout/index.jsx":"23","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/actionConstants.js":"24","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/helpers/axios.js":"25","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/MenuHeader/index.jsx":"26","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/Header/index.jsx":"27","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/ProductStore/index.jsx":"28","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/utils/index.jsx":"29","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/ProductPage/index.jsx":"30","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Card/index.jsx":"31","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/MaterialUI/index.jsx":"32","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductDetailsPage/index.jsx":"33","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CartPage/index.jsx":"34","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CartPage/CartItem/index.jsx":"35","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/PriceDetails/index.jsx":"36","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/cart.reducers.js":"37","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/cart.actions.js":"38","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/user.action.js":"39","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/user.reducers.js":"40","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CheckoutPage/index.jsx":"41","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CheckoutPage/AddressForm.jsx":"42","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/OrderPage/index.jsx":"43","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Spinner/index.jsx":"44","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/ClothingAndAccessoris/index.jsx":"45","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/OrderDetailsPage/index.jsx":"46","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Price.jsx":"47","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Rating.jsx":"48","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Cart.jsx":"49"},{"size":634,"mtime":1612806912994,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1612279877797,"results":"52","hashOfConfig":"51"},{"size":1883,"mtime":1613555503967,"results":"53","hashOfConfig":"51"},{"size":343,"mtime":1612549986522,"results":"54","hashOfConfig":"51"},{"size":778,"mtime":1612626515151,"results":"55","hashOfConfig":"51"},{"size":273,"mtime":1612862026909,"results":"56","hashOfConfig":"51"},{"size":1127,"mtime":1612862795985,"results":"57","hashOfConfig":"51"},{"size":260,"mtime":1612811164555,"results":"58","hashOfConfig":"51"},{"size":1634,"mtime":1612279877797,"results":"59","hashOfConfig":"51"},{"size":886,"mtime":1612279877801,"results":"60","hashOfConfig":"51"},{"size":2207,"mtime":1612890180168,"results":"61","hashOfConfig":"51"},{"size":2016,"mtime":1612279877801,"results":"62","hashOfConfig":"51"},{"size":0,"mtime":1612279877801,"results":"63","hashOfConfig":"51"},{"size":445,"mtime":1612279877801,"results":"64","hashOfConfig":"51"},{"size":952,"mtime":1612865227840,"results":"65","hashOfConfig":"51"},{"size":251,"mtime":1612937145012,"results":"66","hashOfConfig":"51"},{"size":3517,"mtime":1612817759666,"results":"67","hashOfConfig":"51"},{"size":2480,"mtime":1612279877797,"results":"68","hashOfConfig":"51"},{"size":684,"mtime":1612518679894,"results":"69","hashOfConfig":"51"},{"size":2511,"mtime":1612890195644,"results":"70","hashOfConfig":"51"},{"size":0,"mtime":1612279877797,"results":"71","hashOfConfig":"51"},{"size":440,"mtime":1612279877797,"results":"72","hashOfConfig":"51"},{"size":365,"mtime":1612279877797,"results":"73","hashOfConfig":"51"},{"size":3594,"mtime":1612889356714,"results":"74","hashOfConfig":"51"},{"size":1009,"mtime":1612903501261,"results":"75","hashOfConfig":"51"},{"size":1754,"mtime":1612890256240,"results":"76","hashOfConfig":"51"},{"size":11770,"mtime":1613555676620,"results":"77","hashOfConfig":"51"},{"size":5989,"mtime":1612892499468,"results":"78","hashOfConfig":"51"},{"size":446,"mtime":1612519441409,"results":"79","hashOfConfig":"51"},{"size":3609,"mtime":1612892494116,"results":"80","hashOfConfig":"51"},{"size":506,"mtime":1612614638145,"results":"81","hashOfConfig":"51"},{"size":3483,"mtime":1612809334882,"results":"82","hashOfConfig":"51"},{"size":5509,"mtime":1612861658806,"results":"83","hashOfConfig":"51"},{"size":5209,"mtime":1612729814138,"results":"84","hashOfConfig":"51"},{"size":2821,"mtime":1612894759014,"results":"85","hashOfConfig":"51"},{"size":1187,"mtime":1612710244304,"results":"86","hashOfConfig":"51"},{"size":1121,"mtime":1612591412996,"results":"87","hashOfConfig":"51"},{"size":3933,"mtime":1612895175343,"results":"88","hashOfConfig":"51"},{"size":4009,"mtime":1612726272680,"results":"89","hashOfConfig":"51"},{"size":2177,"mtime":1612719435170,"results":"90","hashOfConfig":"51"},{"size":13519,"mtime":1612898062290,"results":"91","hashOfConfig":"51"},{"size":8510,"mtime":1612897930317,"results":"92","hashOfConfig":"51"},{"size":2109,"mtime":1612898722696,"results":"93","hashOfConfig":"51"},{"size":911,"mtime":1612892368550,"results":"94","hashOfConfig":"51"},{"size":3171,"mtime":1612892486407,"results":"95","hashOfConfig":"51"},{"size":3856,"mtime":1612898765593,"results":"96","hashOfConfig":"51"},{"size":380,"mtime":1612817389642,"results":"97","hashOfConfig":"51"},{"size":468,"mtime":1612817434143,"results":"98","hashOfConfig":"51"},{"size":672,"mtime":1612817374266,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1z0pbh",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/index.js",[],["214","215"],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/reportWebVitals.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/App.js",["216","217","218","219"],"import HomePage from \"./containers/HomePage/index\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCategory, isUserLoggedIn, updateCart,getAddress } from \"./store/actions\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ProductListPage from './containers/ProductListPage/index'\nimport ProductDetailsPage from './containers/ProductDetailsPage'\nimport CartPage from './containers/CartPage/index'\nimport CheckoutPage from './containers/CheckoutPage/index'\nimport OrderDetailsPage from './containers/OrderDetailsPage/index'\n\nimport './App.css'\nimport OrderPage from \"./containers/OrderPage\";\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllCategory: () => dispatch(getAllCategory()),\n    isUserLoggedIn: () => dispatch(isUserLoggedIn()),\n    updateCart : ()=>dispatch(updateCart()),\n    getAddress:()=>dispatch(getAddress())\n\n  };\n};\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getAllCategory();\n    this.props.isUserLoggedIn();\n    this.props.updateCart();\n    this.props.getAddress()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/account/orders\" exact component={OrderPage} />\n            <Route exact path=\"/checkout\" exact component={CheckoutPage} />\n            <Route exact path=\"/cart\" exact component={CartPage} />\n            <Route exact path=\"/mern-flipkart-frontend\" exact component={HomePage} />\n            <Route path=\"/order_details/:orderId\" component={OrderDetailsPage} />\n            <Route path=\"/:productSlug/:productId/p\" component={ProductDetailsPage} />\n            <Route path=\"/:slug\" component={ProductListPage} />\n\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\nexport default connect(null, mapDispatchToProps)(App);\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/index.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/index.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/HomePage/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/index.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/auth.reducers.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/userauth.reducers.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/product.reducer.js",["220"],"import { productConstants } from \"../actions/actionConstants\";\n\nconst initState = {\n  products: [],\n  priceRange: {},\n  productsByPrice: {},\n  pageRequest: false,\n  page: {},\n  error: null,\n  productDetails: {},\n  loading: false,\n  categoryChanged:false\n};\n\nconst  index = (state = initState, action) => {\n  switch (action.type) {\n    case productConstants.GET_PRODUCT_BY_SLUG_REQUEST:\n      state = {\n        ...state,\n        loading:true\n      };\n      break; \n      case productConstants.GET_PRODUCT_BY_SLUG_SUCCESS:\n      state = {\n        ...state,\n        products: action.payload.products,\n        priceRange: action.payload.priceRange,\n        productsByPrice: {\n          ...action.payload.productsByPrice,\n        },\n        loading:false,\n      };\n      break;\n    case productConstants.GET_PRODUCT_BY_SLUG_FAILURE:\n      state = {\n        ...state,\n        products:[],\n        priceRange:{},\n        productsByPrice:{},\n        error: action.payload.error,\n        loading:false,\n      };\n      break;\n    case productConstants.GET_PRODUCT_BY_PAGE_REQUEST:\n      state = {\n        ...state,\n        pageRequest: true,\n      };\n      break;\n    case productConstants.GET_PRODUCT_BY_PAGE_SUCCESS:\n      state = {\n        ...state,\n        page: action.payload.page,\n        pageRequest: false,\n      };\n      break;\n    case productConstants.GET_PRODUCT_BY_PAGE_FAILURE:\n      state = {\n        ...state,\n        pageRequest: false,\n        error: action.payload.error,\n      };\n      break;\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        productDetails: action.payload.productDetails,\n      };\n      break;\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n      break;\n      case productConstants.CHANGE_CATEGORY_GET_PRODUCT:\n        state={\n          ...state,\n          categoryChanged:action.payload\n        }\n  }\n\n  return state;\n};\n\nexport default index","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/category.reducer.js",["221","222"],"import { categoryConstants } from \"../actions/actionConstants\";\n\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories =(parentId,categories,category)=>{\n\n  let myCategory = []\n\n  if(parentId==undefined){\n    return [\n      ...categories,\n      {\n        _id:category._id,\n        name:category.name,\n        slug:category.slug,\n        children:[]\n      }\n    ]\n  }\n\n  for(let cat of categories){\n    if(cat._id == parentId){\n      myCategory.push({\n        ...cat,\n        children:cat.children ? buildNewCategories(parentId,[...cat.children,{\n          _id: category._id,\n          name:category.name,\n          slug:category.slug,\n          parentId:category.parentId,\n          children:category.children\n        }],category):[]\n      }) \n    }else{\n    myCategory.push({\n      ...cat,\n      children:cat.children ? buildNewCategories(parentId,cat.children,category) : []\n    })\n  } \n}\n\n  return myCategory\n}\n\nconst categoryReducers = (state = initState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_CATEGORY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case categoryConstants.GET_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        categories: action.payload.categories,\n      };\n\n    case categoryConstants.GET_CATEGORY_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    case categoryConstants.ADD_CATEGORY_REQUEST:\n      return{\n        ...state,\n        loading:true\n      }\n    case categoryConstants.ADD_CATEGORY_SUCCESS:\n      const category = action.payload.category\n      return{\n        ...state,\n        categories : buildNewCategories(category.parentId,state.categories,category),\n        loading:false\n      }\n    case categoryConstants.ADD_CATEGORY_FAILURE:\n      return{\n        ...initState,\n        loading:false\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducers;\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/order.reducer.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/initialData.reducers.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/getProductsBySlug.js",["223"],"import axios from \"../../helpers/axios\";\nimport { productConstants } from \"./actionConstants\";\n\nexport const getProductsBySlug = (slug) => {\n  return async (dispatch) => {\n    try{\n      dispatch({\n        type: productConstants.GET_PRODUCT_BY_SLUG_REQUEST,\n      });\n      const res = await axios.get(`/products/${slug}`);\n      console.log('slug response',res.data);\n      if (res.status == 200) {\n        console.log('slug action product found');\n        dispatch({\n          type: productConstants.GET_PRODUCT_BY_SLUG_SUCCESS,\n          payload: res.data,\n        });\n      }\n      else {\n        console.log('slug action product not found');\n  \n        dispatch({\n          type: productConstants.GET_PRODUCT_BY_SLUG_FAILURE,\n          payload: res.error,\n        });\n      }\n    }catch(error){\n      dispatch({\n        type: productConstants.GET_PRODUCT_BY_SLUG_FAILURE,\n        payload: {error:\"no product found\"},\n      });\n    }\n     \n  };\n};\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/urlConfig.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/auth.actions.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/userauth.actions.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/category.action.js",["224"],"import axios from \"../../helpers/axios\";\nimport { categoryConstants } from \"./actionConstants\";\n\nexport const getAllCategory = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: categoryConstants.GET_CATEGORY_REQUEST,\n    });\n    const res = await axios.get(\"/categories\");\n    if (res.status == 200) {\n      // const {categoryList} = res.data\n      dispatch({\n        type: categoryConstants.GET_CATEGORY_SUCCESS,\n        payload: {\n          categories: res.data.categories,\n        },\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_CATEGORY_FAILURE,\n        payload: {\n          error: res.data.error,\n        },\n      });\n    }\n  };\n};\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/product.action.js",["225"],"import axios from \"../../helpers/axios\";\nimport { productConstants } from \"./actionConstants\";\n\nexport const addProduct = (form) => {\n    return async (dispatch) => {\n        dispatch({ type: productConstants.ADD_PRODUCT_REQUEST })\n\n        const res = await axios.post('/product/create', form)\n        if (res.status == 201) {\n            dispatch({\n                type: productConstants.ADD_PRODUCT_SUCCESS,\n                payload: res.data.message\n            })\n        } else {\n            dispatch({\n                type: productConstants.ADD_PRODUCT_FAILURE,\n                payload: res.data.error\n            })\n        }\n    }\n}\n\nexport const getProductPage = (payload) => {\n    return async (dispatch) => {\n        try {\n            dispatch({ type: productConstants.GET_PRODUCT_BY_PAGE_REQUEST })\n            const { cid, type } = payload.params\n            const res = await axios.get(`/page/${cid}/${type}`);\n            if (res.status === 200) {\n                const { page } = res.data\n                dispatch({\n                    type: productConstants.GET_PRODUCT_BY_PAGE_SUCCESS,\n                    payload: { page }\n                })\n\n            } else {\n                const { error } = res.data\n\n                dispatch({\n                    type: productConstants.GET_PRODUCT_BY_PAGE_FAILURE,\n                    payload: { error }\n                })\n            }\n        } catch (error) {\n            console.log('product action page ',error);\n        }\n    }\n}\n\nexport const getProductDetailsById = (payload)=>{\nreturn async (dispatch)=>{\n    dispatch({type:productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST})\n    let res;\n    try{\n        const productId = payload\n        res = await axios.get(`/product/${productId}`) \n        if(res.status===200){\n            dispatch({\n                type:productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n                payload:{productDetails:res.data.product}\n            })\n        }else{\n            dispatch({\n                type:productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n                payload:{error:res.data.error}\n            })\n        }\n    }catch(error){\n        dispatch({\n            type:productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n            payload:{error:res.data.error}\n        })\n    }\n}\n}\n\nexport const changeCategoryGetProduct = (flag)=>{\n    return dispatch=>{\n        dispatch({\n            type:productConstants.CHANGE_CATEGORY_GET_PRODUCT,\n            payload:flag\n        })\n    }\n}","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/order.action.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Loading.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/Layout/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/actionConstants.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/helpers/axios.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/MenuHeader/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/Header/index.jsx",["226","227","228","229","230","231","232","233","234","235","236"],"import React, { Component } from 'react'\nimport { IoIosArrowDown, IoIosCart, IoIosSearch } from 'react-icons/io';\nimport flipkartLogo from '../../images/logo/flipkart.png';\nimport goldenStar from '../../images/logo/golden-star.png';\nimport { connect } from 'react-redux'\nimport { login, userLogOut,signup } from '../../store/actions'\nimport { Link } from 'react-router-dom'\nimport Cart from '../../components/UI/Cart'\nimport './style.css'\nimport {\n    Modal,\n    MaterialInput,\n    MaterialButton,\n    DropdownMenu\n} from '../MaterialUI';\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (data) => dispatch(login(data)),\n        userLogOut: () => dispatch(userLogOut()),\n        _signup:(user)=>{dispatch(signup(user))}\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nexport class index extends Component {\n    state = {\n        loginModal: false,\n        signupModal: false,\n        firstName: \"\",\n        lastName: \"\",\n        email: '',\n        password: ''\n    }\n    userSignup = () => {\n        const { firstName, lastName, email, password } = this.state\n        const user = {\n            firstName, lastName, email, password\n        }\n        if (firstName == \"\" || lastName == \"\" || email == \"\" || password == \"\") {\n            return\n        }\n        this.props._signup(user)\n    }\n    renderLoggedInMenu = () => {\n        return (\n            <DropdownMenu\n                menu={\n                    <a className=\"fullName\" style={{ color: \"#fff\" }}>\n                        {this.props.authReducers.user.fullName ? this.props.authReducers.user.fullName : 'Unknown'}\n                    </a>\n                }\n                menus={[\n                    { label: 'My Profile', href: '', icon: null },\n                    { label: 'SuperCoin Zone', href: '', icon: null },\n                    { label: 'Flipkart Plus Zone', href: '', icon: null },\n                    { label: 'Orders', href: '/account/orders', icon: null },\n                    { label: 'Wishlist', href: '', icon: null },\n                    { label: 'My Chats', href: '', icon: null },\n                    { label: 'Coupons', href: '', icon: null },\n                    { label: 'Rewards', href: '', icon: null },\n                    { label: 'Notifications', href: '', icon: null },\n                    { label: 'Gift Cards', href: '', icon: null },\n                ]}\n                firstMenu={\n                    <div className=\"firstmenu\">\n                        <span>Want to logout?</span>\n                        <span onClick={this.props.userLogOut} style={{ color: '#2874f0', cursor: \"pointer\" }}>Logout</span>\n                    </div>\n                }\n            />\n        )\n    }\n    renderNonLoggedInMenu = () => {\n        return (\n            <DropdownMenu\n                menu={\n                    <a\n                        onClick={() => this.setState({\n                            signupModal: false,\n                            loginModal: true\n                        })}\n                        className=\"loginButton\"\n                    >\n                        Login\n                    </a>\n                }\n                menus={[\n                    { label: 'My Profile', href: '', icon: null },\n                    { label: 'Flipkart Plus Zone', href: '', icon: null },\n                    { label: 'Orders', href: '', icon: null, onClick: () => { !this.props.authReducers.authenticate && this.setState({ loginModal: true }) } },\n                    { label: 'Wishlist', href: '', icon: null },\n                    { label: 'Rewards', href: '', icon: null },\n                    { label: 'Gift Cards', href: '', icon: null },\n                ]}\n                firstMenu={\n                    <div className=\"firstmenu\">\n                        <span>New Customer?</span>\n                        <a\n                            onClick={() => this.setState({\n                                signupModal: true,\n                                loginModal: false\n                            })}\n                            className=\"loginButton\"\n                        >\n                            Sign Up\n                    </a>\n                    </div>\n                }\n            />\n        )\n    }\n    userLogin = () => {\n        if (this.state.signupModal) {\n            this.userSignup()\n        } else {\n            this.props.login({ email: this.state.email, password: this.state.password })\n        }\n        this.setState({ loginModal: false, signupModal: false })\n    }\n    render() {\n\n        return (\n            <div className=\"header\">\n                <Modal\n                    visible={this.state.loginModal || this.state.signupModal}\n                    onClose={() => this.setState({ loginModal: false,signupModal:false })}\n                >\n                    <div className=\"authContainer\">\n                        <div className=\"row\">\n                            <div className=\"leftspace\">\n                                <h2>{this.state.signupModal ? \"Register\" : \"Login\"}</h2>\n                                <p>Get access to your Orders, Wishlist and Recommendations</p>\n                            </div>\n                            <div className=\"rightspace\">\n                                <div className=\"loginInputContainer\">\n                                    {\n                                        this.state.signupModal && (\n                                            <MaterialInput\n                                                type=\"text\"\n                                                label=\"Enter First Name\"\n                                                value={this.state.firstName}\n                                                onChange={(e) => this.setState({ firstName: e.target.value })}\n                                            />\n                                        )\n                                    }\n                                    {\n                                        this.state.signupModal && (\n                                            <MaterialInput\n                                                type=\"text\"\n                                                label=\"Enter Last Name\"\n                                                value={this.state.lastName}\n                                                onChange={(e) => this.setState({ lastName: e.target.value })}\n                                            />\n                                        )\n                                    }\n\n                                    <MaterialInput\n                                        type=\"text\"\n                                        label=\"Enter Email/Enter Mobile Number\"\n                                        value={this.state.email}\n                                        onChange={(e) => this.setState({ email: e.target.value })}\n                                    />\n\n                                    <MaterialInput\n                                        type=\"password\"\n                                        label=\"Enter Password\"\n                                        value={this.state.password}\n                                        onChange={(e) => this.setState({ password: e.target.value })}\n                                    // rightElement={<Link to=\"#\">Forgot?</Link>}\n                                    />\n                                    <MaterialButton\n                                        title={this.state.signupModal ? \"Register\" : \"Login\"}\n                                        bgColor=\"#fb641b\"\n                                        textColor=\"#ffffff\"\n                                        style={{ margin: \"40px 0 20px 0\" }}\n                                        onClick={this.userLogin}\n                                    />\n                                    <div className=\"text-center\">OR</div>\n                                    <MaterialButton\n                                        title=\"Request OTP\"\n                                        bgColor=\"#ffffff\"\n                                        textColor=\"#2874f0\"\n                                        style={{ margin: \"20px 0\" }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                <div className=\"subHeader\">\n                    {/* logo */}\n                    <Link to='/mern-flipkart-frontend'>\n                        <div className=\"logo\">\n                            <a >\n                                <img src={flipkartLogo} className=\"logoimage\" alt=\"\" />\n                            </a>\n                            <a style={{ marginTop: '-10px' }}>\n                                <span className=\"exploreText\">Explore</span>\n                                <span className=\"plusText\">Plus</span>\n                                <img src={goldenStar} className=\"goldenStar\" alt=\"\" />\n                            </a>\n                        </div>\n                    </Link>\n                    {/* !logo */}\n                    {/* search component */}\n                    <div style={{\n                        padding: '0 10px'\n                    }}>\n                        <div className=\"searchInputContainer\">\n                            <input\n                                className=\"searchInput\"\n                                placeholder={'search for products, brands and more'}\n                            />\n                            <div className=\"searchIconContainer\">\n                                <IoIosSearch style={{\n                                    color: '#2874f0'\n                                }} />\n                            </div>\n\n                        </div>\n                    </div>\n                    {/* !search component */}\n                    {/* right side menu         */}\n                    <div className=\"rightMenu\">\n                        {\n                            this.props.authReducers.authenticate\n                                ? this.renderLoggedInMenu()\n                                : this.renderNonLoggedInMenu()\n                        }\n                        <DropdownMenu\n                            menu={\n                                <a className=\"more\" style={{ color: \"#fff\" }}>\n                                    <span>More</span>\n                                    <IoIosArrowDown />\n                                </a>\n                            }\n                            menus={[\n                                { label: 'Notification Preference', href: '', icon: null },\n                                { label: 'Sell on flipkart', href: '', icon: null },\n                                { label: '24x7 Customer Care', href: '', icon: null },\n                                { label: 'Advertise', href: '', icon: null },\n                                { label: 'Download App', href: '', icon: null }\n                            ]}\n                        />\n                        <div >\n                            <Link to='/cart' className=\"cart\" style={{ color: \"#fff\" }}>\n                                <Cart count={Object.keys(this.props.cartReducer.cartItems).length}/>\n                                {/* <IoIosCart /> */}\n                                <span style={{ margin: '0 10px' }}>Cart</span>\n                            </Link>\n                        </div>\n                    </div>\n                    {/* !right side menu         */}\n\n                </div>\n            </div>\n        )\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(index)","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/ProductStore/index.jsx",["237","238","239","240","241"],"import React, { Component } from 'react'\nimport Layout from '../../../components/Layout/index'\nimport { changeCategoryGetProduct, getProductsBySlug } from '../../../store/actions/index'\nimport { connect } from 'react-redux'\nimport './style.css'\nimport { generatePublicUrl } from '../../../urlConfig'\nimport Loading from '../../../components/UI/Loading'\nimport { Link } from 'react-router-dom'\nimport Card from '../../../components/UI/Card/index'\nimport { ClipSpinner, CircleSpinner, DotSpinner,RingSpinner } from '../../../components/UI/Spinner/index'\nimport Rating from '../../../components/UI/Rating'\nimport Price from '../../../components/UI/Price'\nimport { MaterialButton } from '../../../components/MaterialUI'\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getProductsBySlug: (slug) => dispatch(getProductsBySlug(slug)),\n        changeCategoryGetProduct:(flag)=>dispatch(changeCategoryGetProduct(flag))\n\n    }\n}\n\nexport class index extends Component {\n\n  \n\n    componentDidMount() {\n        const { match } = this.props\n        const slug = match.params.slug\n        this.props.getProductsBySlug(slug)\n        console.log('PRODUCT STORE PROPS', this.props.productReducers);\n        this.props.changeCategoryGetProduct(false)\n\n    }\n    render() {\n        if (this.props.productReducers.categoryChanged) {\n            const { match } = this.props\n            const slug = match.params.slug\n            this.props.getProductsBySlug(slug)\n            console.log('PRODUCT STORE PROPS', this.props.productReducers);\n            this.props.changeCategoryGetProduct(false)\n        }\n        if (this.props.productReducers.loading) {\n            return (\n                <>\n                    {/* <ClipSpinner /> */}\n                    {/* <CircleSpinner /> */}\n                    {/* <DotSpinner /> */}\n                    <RingSpinner/>\n\n                </>\n            )\n        }\n        return (\n            <>\n                {\n\n                    this.props.productReducers.products.length > 0 ?\n                        Object.keys(this.props.productReducers.productsByPrice).map((key, index) => {\n                            console.log('keyyyyyyyyyyyyyyyy',key);\n                            return (\n                                <Card\n                                    key={index}\n                                    headerleft={`${this.props.match.params.slug} mobile under ${this.props.productReducers.priceRange[key]}`}\n                                    headerright={\n                                        <MaterialButton\n                                            title={\"VIEW ALL\"}\n                                            style={{\n                                                width: \"96px\",\n                                            }}\n                                            bgColor=\"#2874f0\"\n                                            fontSize=\"12px\"\n                                        />\n                                    }\n                                    style={{\n                                        width: \"calc(100% - 40px)\",\n                                        margin: \"20px\",\n                                    }}\n                                >\n                                    <div style={{ display: \"flex\" }}>\n                                        {this.props.productReducers.productsByPrice[key].map((product, _index) => (\n                                            <Link\n                                                key={_index}\n                                                to={`/${product.slug}/${product._id}/p`}\n                                                style={{\n                                                    display: \"block\",\n                                                    textDecoration: \"none\",\n                                                    color: \"#000\",\n                                                }}\n                                                className=\"productContainer\"\n                                            >\n                                                <div className=\"productImgContainer\">\n                                                    <img src={generatePublicUrl(product.productPictures[0].img)} alt=\"\" />\n                                                </div>\n                                                <div className=\"productInfo\">\n                                                    <div style={{ margin: \"10px 0\" }}>{product.name}</div>\n                                                    <div>\n                                                        <Rating value=\"4.3\" />\n                                                                &nbsp;&nbsp;\n                                                         <span\n                                                            style={{\n                                                                color: \"#777\",\n                                                                fontWeight: \"500\",\n                                                                fontSize: \"12px\",\n                                                            }}\n                                                        >\n                                                            (3353)\n                                                         </span>\n                                                    </div>\n                                                    <Price value={product.price} />\n                                                </div>\n                                            </Link>\n                                        ))}\n                                    </div>\n                                </Card>\n                            )\n                        }) : null\n\n                }\n            </>\n        )\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(index)\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/utils/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/ProductPage/index.jsx",["242","243","244","245"],"import React, { Component } from 'react'\nimport { changeCategoryGetProduct, getProductPage } from '../../../store/actions/index'\nimport { connect } from 'react-redux'\nimport getParams from '../../../utils/index'\nimport Loading from '../../../components/UI/Loading'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport Card from '../../../components/UI/Card/index'\nimport { ClipSpinner, CircleSpinner, DotSpinner,RingSpinner } from '../../../components/UI/Spinner/index'\n\nimport { Link } from 'react-router-dom'\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getProductPage: (payload) => dispatch(getProductPage(payload)),\n        changeCategoryGetProduct:(flag)=>dispatch(changeCategoryGetProduct(flag))\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\n\nexport class index extends Component {\n\n    componentDidMount() {\n        const params = getParams(this.props.location.search)\n        const payload = { params }\n        this.props.getProductPage(payload)\n        console.log('PRODUCT PAGE PROPS', this.props.productReducers);\n        this.props.changeCategoryGetProduct(false)\n\n    }\n\n\n    render() {\n        if (this.props.productReducers.categoryChanged) {\n            const params = getParams(this.props.location.search)\n            const payload = { params }\n            this.props.getProductPage(payload)\n            console.log('PRODUCT PAGE PROPS', this.props.productReducers);\n            this.props.changeCategoryGetProduct(false)\n        }\n        if (this.props.productReducers.loading) {\n            return (\n                <>\n                    {/* <ClipSpinner /> */}\n                    <CircleSpinner />\n                    {/* <DotSpinner /> */}\n\n                </>\n            )\n        }\n\n        return (\n            <div style={{ margin: \"0 10px\" }}>\n                <h1>{this.props.productReducers.page.title}</h1>\n                <Carousel\n                    renderThumbs={() => { }}\n                >\n                    {\n                        this.props.productReducers.page.banners && this.props.productReducers.page.banners.map((banner, index) => {\n                            return (\n                                <Link\n                                    key={index}\n                                    className=\"d-block\"\n                                    to={banner.navigateTo}\n                                >\n                                    <img src={banner.image} alt='' width=\"100%\" height=\"300px\" />\n                                </Link>\n                            )\n                        })\n                    }\n                </Carousel>\n                <div className=\"d-flex justify-content-center flex-wrap\" style={{ margin: \"10px 0\" }}>\n                    {\n                        this.props.productReducers.page.products && this.props.productReducers.page.products.map((product, index) => {\n                            return (\n                                <Card\n                                    key={index}\n                                    style={{ width: \"400px\", height: \"200px\", margin: \"5px\" }}\n                                >\n                                    <img src={product.image} alt='' width=\"100%\" height=\"100%\" />\n                                </Card>\n                            )\n                        })\n                    }\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index)\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Card/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/MaterialUI/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductDetailsPage/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CartPage/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CartPage/CartItem/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/PriceDetails/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/cart.reducers.js",["246","247"],"import { cartConstants } from \"../actions/actionConstants\";\n\nconst initState = {\n    cartItems: {\n        // 123: {\n        //     _id: 123,\n        //     name: 'Samsung mobile',\n        //     img: 'some.jpg',\n        //     price: 200,\n        //     qty: 1,\n        // }\n    },\n    updatingCart: false,\n    error: null\n};\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case cartConstants.ADD_TO_CART_REQUEST:\n            state = {\n                ...state,\n                updatingCart: true\n            }\n            break;\n        case cartConstants.ADD_TO_CART_SUCCESS:\n            state = {\n                ...state,\n                cartItems: action.payload.cartItems,\n                updatingCart: false\n            }\n            break;\n        case cartConstants.ADD_TO_CART_FAILURE:\n            state = {\n                ...state,\n                updatingCart: false,\n                error: action.payload.error\n            }\n            break;\n        case cartConstants.RESET_CART:\n            state = {\n                ...initState\n            }\n    }\n    return state;\n}","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/cart.actions.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/actions/user.action.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/store/reducers/user.reducers.js",["248"],"import { userConstants } from \"../actions/actionConstants\";\n\nconst initState = {\n  address: [],\n  orders: [],\n  orderDetails: {},\n  error: null,\n  loading: false,\n  orderFetching: false,\n  placedOrderId: null,\n};\n\nconst index =  (state = initState, action) => {\n  switch (action.type) {\n    case userConstants.GET_USER_ADDRESS_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case userConstants.GET_USER_ADDRESS_SUCCESS:\n      state = {\n        ...state,\n        address: action.payload.address,\n        loading: false,\n      };\n      break;\n    case userConstants.GET_USER_ADDRESS_FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n      break;\n    case userConstants.ADD_USER_ADDRESS_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case userConstants.ADD_USER_ADDRESS_SUCCESS:\n      state = {\n        ...state,\n        address: action.payload.address,\n        loading: false,\n      };\n      break;\n    case userConstants.ADD_USER_ADDRESS_FAILURE:\n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_REQUEST:\n      state = {\n        ...state,\n        orderFetching: true,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_SUCCESS:\n      state = {\n        ...state,\n        orders: action.payload.orders,\n        orderFetching: false,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_FAILURE:\n      state = {\n        ...state,\n        error: action.payload.error,\n        orderFetching: false,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_DETAILS_REQUEST:\n      break;\n    case userConstants.GET_USER_ORDER_DETAILS_SUCCESS:\n      state = {\n        ...state,\n        orderDetails: action.payload.order,\n      };\n      break;\n    case userConstants.GET_USER_ORDER_DETAILS_FAILURE:\n      break;\n    case userConstants.ADD_USER_ORDER_SUCCESS:\n      state = {\n        ...state,\n        placedOrderId: action.payload.order._id,\n      };\n      break;\n  }\n\n  return state;\n};\n\nexport default index","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CheckoutPage/index.jsx",["249"],"import React, { Component } from \"react\";\nimport { login, addOrder, getAddress, getCartItems } from \"../../store/actions/index\";\nimport Layout from \"../../components/Layout/index\";\nimport {\n  Anchor,\n  MaterialButton,\n  MaterialInput,\n} from \"../../components/MaterialUI/index\";\nimport PriceDetails from \"../../components/PriceDetails\";\nimport Card from \"../../components/UI/Card\";\nimport CartPage from \"../CartPage\";\nimport AddressForm from \"./AddressForm\";\nimport { connect } from 'react-redux'\n\nimport \"./style.css\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (data) => dispatch(login(data)),\n    addOrder: (payload) => dispatch(addOrder(payload)),\n    getAddress: () => dispatch(getAddress()),\n    getCartItems: () => dispatch(getCartItems())\n  }\n}\n\nconst CheckoutStep = (props) => {\n  return (\n    <div className=\"checkoutStep\">\n      <div\n        onClick={props.onClick}\n        className={`checkoutHeader ${props.active && \"active\"}`}\n      >\n        <div>\n          <span className=\"stepNumber\">{props.stepNumber}</span>\n          <span className=\"stepTitle\">{props.title}</span>\n        </div>\n      </div>\n      {props.body && props.body}\n    </div>\n  );\n};\n\nconst Address = ({\n  adr,\n  selectAddress,\n  enableAddressEditForm,\n  confirmDeliveryAddress,\n  onAddressSubmit,\n}) => {\n  return (\n    <div className=\"flexRow addressContainer\">\n      <div>\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\n      </div>\n      <div className=\"flexRow sb addressinfo\">\n        {!adr.edit ? (\n          <div style={{ width: \"100%\" }}>\n            <div className=\"addressDetail\">\n              <div>\n                <span className=\"addressName\">{adr.name}</span>\n                <span className=\"addressType\">{adr.addressType}</span>\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\n              </div>\n              {adr.selected && (\n                <Anchor\n                  name=\"EDIT\"\n                  onClick={() => enableAddressEditForm(adr)}\n                  style={{\n                    fontWeight: \"500\",\n                    color: \"#2874f0\",\n                  }}\n                />\n              )}\n            </div>\n            <div className=\"fullAddress\">\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\n            </div>\n            {adr.selected && (\n              <MaterialButton\n                title=\"DELIVERY HERE\"\n                onClick={() => confirmDeliveryAddress(adr)}\n                style={{\n                  width: \"200px\",\n                  margin: \"10px 0\",\n                }}\n              />\n            )}\n          </div>\n        ) : (\n            <AddressForm\n              withoutLayout={true}\n              onSubmitForm={onAddressSubmit}\n              initialData={adr}\n              onCancel={() => { }}\n            />\n          )}\n      </div>\n    </div>\n  );\n};\n\nclass CheckoutPage extends Component {\n  // const user = useSelector((state) => state.user);\n  // const auth = useSelector((state) => state.auth);\n  // const [newAddress, setNewAddress] = useState(false);\n  // const [address, setAddress] = useState([]);\n  // const [confirmAddress, setConfirmAddress] = useState(false);\n  // const [selectedAddress, setSelectedAddress] = useState(null);\n  // const [orderSummary, setOrderSummary] = useState(false);\n  // const [orderConfirmation, setOrderConfirmation] = useState(false);\n  // const [paymentOption, setPaymentOption] = useState(false);\n  // const [confirmOrder, setConfirmOrder] = useState(false);\n  // const cart = useSelector((state) => state.cart);\n  // const dispatch = useDispatch();\n\n  state = {\n    address: this.props.userReducer.address,\n    selectedAddress: null,\n    confirmAddress: false,\n    newAddress: false,\n    orderSummary: false,\n    orderConfirmation: false,\n    confirmOrder: false,\n    paymentOption: false,\n    paymentOption: false,\n    // cart: null,\n    // auth: null,\n    // user: null\n    // cart: this.props.cartReducer.cartItems,\n    // user: this.props.userReducer,\n    email: \"\",\n    password: \"\"\n  }\n\n  onAddressSubmit = (addr) => {\n    this.props.getAddress()\n    this.props.getCartItems()\n    this.setState({\n      selectedAddress: addr,\n      confirmAddress: true,\n      orderSummary: true\n    })\n  };\n\n  selectAddress = (addr) => {\n    const updatedAddress = this.state.address.map((adr) =>\n      adr._id === addr._id\n        ? { ...adr, selected: true }\n        : { ...adr, selected: false }\n    );\n    this.setState({\n      address: updatedAddress\n    })\n  };\n\n  confirmDeliveryAddress = (addr) => {\n    this.setState({\n      selectedAddress: addr,\n      confirmAddress: true,\n      orderSummary: true\n    })\n  };\n\n  enableAddressEditForm = (addr) => {\n    const updatedAddress = this.props.userReducer.address.map((adr) =>\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\n    );\n    this.setState({\n      address: updatedAddress\n    })\n  };\n\n  userOrderConfirmation = () => {\n    this.setState({\n      orderConfirmation: true,\n      orderSummary: false,\n      paymentOption: true,\n    })\n  };\n\n  onConfirmOrder = () => {\n    const totalAmount = Object.keys(this.props.cartReducer.cartItems).reduce(\n      (totalPrice, key) => {\n        const { price, qty } = this.props.cartReducer.cartItems[key];\n        return totalPrice + price * qty;\n      },\n      0\n    );\n    const items = Object.keys(this.props.cartReducer.cartItems).map((key) => ({\n      productId: key,\n      payablePrice: (this.props.cartReducer.cartItems[key].price * this.props.cartReducer.cartItems[key].qty),\n      purchasedQty: this.props.cartReducer.cartItems[key].qty,\n    }));\n    const payload = {\n      addressId: this.state.selectedAddress._id,\n      totalAmount,\n      items,\n      paymentStatus: \"pending\",\n      paymentType: \"cod\",\n    };\n    this.props.addOrder(payload)\n    this.setState({\n      confirmOrder: true\n    })\n    this.props.history.push('/account/orders')\n  };\n\n\n  componentDidMount() {\n    if (this.props.authReducers.authenticate) {\n      this.props.getCartItems()\n    }\n  }\n  setAddress = () => {\n    const address = this.props.userReducer.address.map((adr) => ({\n      ...adr,\n      selected: false,\n      edit: false,\n    }));\n    this.setState({\n      address: address,\n    })\n  }\n  // useEffect(() => {\n  //   this.props.authReducers.authenticate && dispatch(getAddress());\n  //   this.props.authReducers.authenticate && dispatch(getCartItems());\n  // }, [this.props.authReducers.authenticate]);\n\n  // useEffect(() => {\n  //   const address = user.address.map((adr) => ({\n  //     ...adr,\n  //     selected: false,\n  //     edit: false,\n  //   }));\n  //   setAddress(address);\n  //   //user.address.length === 0 && setNewAddress(true);\n  // }, [user.address]);\n\n  // useEffect(() => {\n  //   if (confirmOrder && user.placedOrderId) {\n  //     props.history.push(`/order_details/${user.placedOrderId}`);\n  //   }\n  // }, [user.placedOrderId]);\n  loginUser = () => {\n    this.props.login({ email: this.state.email, password: this.state.password })\n    this.props.getAddress()\n    this.props.getCartItems()\n    this.setAddress()\n  }\n\n  render() {\n    const getTotalItem = (qty, key) => {\n      return this.props.cartReducer.cartItems[key].qty + qty\n    }\n    const getTotalPrice = (totalPrice, key) => {\n      const { price, qty } = this.props.cartReducer.cartItems[key]\n      return totalPrice + (price * qty)\n    }\n\n    return (\n      <Layout>\n        <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\n          <div className=\"checkoutContainer\">\n            {/* check if user logged in or not */}\n            <CheckoutStep\n              stepNumber={\"1\"}\n              title={\"LOGIN\"}\n              active={!this.props.authReducers.authenticate}\n              body={\n                this.props.authReducers.authenticate ? (\n                  <div className=\"loggedInId\">\n                    <span style={{ fontWeight: 500 }}>{this.props.authReducers.user.fullName}</span>\n                    <span style={{ margin: \"0 5px\" }}>{this.props.authReducers.user.email}</span>\n                  </div>\n                ) : (\n                    <div>\n                      <MaterialInput\n                        label=\"Email\"\n                        value={this.state.email}\n                        onChange={(e) => this.setState({ email: e.target.value })}\n                      />\n                      <br />\n                      <MaterialInput\n                        label=\"Password\"\n                        value={this.state.password}\n                        onChange={(e) => this.setState({ password: e.target.value })}\n                      />\n                      <br />\n                      <MaterialButton\n                        title=\"Login\"\n                        onClick={this.loginUser}\n                        style={{\n                          width: \"200px\",\n                          margin: \"0 0 20px 20px\",\n                        }}\n                      />\n                    </div>\n                  )\n              }\n            />\n            <CheckoutStep\n              stepNumber={\"2\"}\n              title={\"DELIVERY ADDRESS\"}\n              active={!this.state.confirmAddress && this.props.authReducers.authenticate}\n              body={\n                <>\n                  {this.state.confirmAddress ? (\n                    <div className=\"stepCompleted\">{`${this.state.selectedAddress.name} ${this.state.selectedAddress.address} - ${this.state.selectedAddress.pinCode}`}</div>\n                  ) : (\n                      this.state.address.map((adr, index) => (\n                        <Address\n                          selectAddress={this.selectAddress}\n                          enableAddressEditForm={this.enableAddressEditForm}\n                          confirmDeliveryAddress={this.confirmDeliveryAddress}\n                          onAddressSubmit={this.onAddressSubmit}\n                          adr={adr}\n                          key={index}\n                        />\n                      ))\n                    )}\n                </>\n              }\n            />\n\n            {/* AddressForm */}\n            {this.state.confirmAddress ? null : this.state.newAddress ? (\n              <AddressForm onSubmitForm={this.onAddressSubmit} onCancel={() => { }} />\n            ) : this.props.authReducers.authenticate ? (\n              <CheckoutStep\n                stepNumber={\"+\"}\n                title={\"ADD NEW ADDRESS\"}\n                active={false}\n                onClick={() => this.setState({ newAddress: true })}\n              />\n            ) : null}\n\n            <CheckoutStep\n              stepNumber={\"3\"}\n              title={\"ORDER SUMMARY\"}\n              active={this.state.orderSummary}\n              body={\n                this.state.orderSummary ? (\n                  <CartPage onlyCartItems={true} />\n                ) : this.state.orderConfirmation ? (\n                  <div className=\"stepCompleted\">\n                    {Object.keys(this.props.cartReducer.cartItems).length} items\n                  </div>\n                ) : null\n              }\n            />\n\n            {this.state.orderSummary && (\n              <Card\n                style={{\n                  margin: \"10px 0\",\n                }}\n              >\n                <div\n                  className=\"flexRow sb\"\n                  style={{\n                    padding: \"20px\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <p style={{ fontSize: \"12px\" }}>\n                    Order confirmation email will be sent to{\" \"}\n                    <strong>{this.props.authReducers.user.email}</strong>\n                  </p>\n                  <MaterialButton\n                    title=\"CONTINUE\"\n                    onClick={this.userOrderConfirmation}\n                    style={{\n                      width: \"200px\",\n                    }}\n                  />\n                </div>\n              </Card>\n            )}\n\n            <CheckoutStep\n              stepNumber={\"4\"}\n              title={\"PAYMENT OPTIONS\"}\n              active={this.state.paymentOption}\n              body={\n                this.state.paymentOption && (\n                  <div>\n                    <div\n                      className=\"flexRow\"\n                      style={{\n                        alignItems: \"center\",\n                        padding: \"20px\",\n                      }}\n                    >\n                      <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\n                      <div>Cash on delivery</div>\n                    </div>\n                    <MaterialButton\n                      title=\"CONFIRM ORDER\"\n                      onClick={this.onConfirmOrder}\n                      style={{\n                        width: \"200px\",\n                        margin: \"0 0 20px 20px\",\n                      }}\n                    />\n                  </div>\n                )\n              }\n            />\n          </div>\n\n          {/* Price Component */}\n          <PriceDetails\n            totalItem={Object.keys(this.props.cartReducer.cartItems).reduce(getTotalItem, 0)}\n            totalPrice={Object.keys(this.props.cartReducer.cartItems).reduce(getTotalPrice, 0)}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPage);","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/CheckoutPage/AddressForm.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/OrderPage/index.jsx",["250","251"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getOrders } from \"../../store/actions\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport { BiRupee } from \"react-icons/bi\";\nimport { IoIosArrowForward } from \"react-icons/io\";\n\nimport \"./style.css\";\nimport { Breed } from \"../../components/MaterialUI\";\nimport { generatePublicUrl } from \"../../urlConfig\";\n\n/**\n * @author\n * @function OrderPage\n **/\n\nconst OrderPage = (props) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.userReducer);\n\n  useEffect(() => {\n    dispatch(getOrders());\n  }, []);\n\n  console.log(user);\n\n  return (\n    <Layout>\n      <div style={{ maxWidth: \"1160px\", margin: \"5px auto\" }}>\n        <Breed\n          breed={[\n            { name: \"Home\", href: \"/\" },\n            { name: \"My Account\", href: \"/account\" },\n            { name: \"My Orders\", href: \"/account/orders\" },\n          ]}\n          breedIcon={<IoIosArrowForward />}\n        />\n        {user.orders.map((order,index) => {\n          return order.items.map((item,_index) => (\n            <Card key={_index} style={{ display: \"block\", margin: \"5px 0\" }}>\n              <Link\n                to={`/order_details/${order._id}`}\n                className=\"orderItemContainer\"\n              >\n                <div className=\"orderImgContainer\">\n                  <img\n                    className=\"orderImg\"\n                    src={generatePublicUrl(item.productId.productPictures[0].img)}\n                  />\n                </div>\n                <div className=\"orderRow\">\n                  <div className=\"orderName\">{item.productId.name}</div>\n                  <div className=\"orderPrice\">\n                    <BiRupee />\n                    {item.payablePrice}\n                  </div>\n                  <div>{order.paymentStatus}</div>\n                </div>\n              </Link>\n            </Card>\n          ));\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default OrderPage;","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Spinner/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/ProductListPage/ClothingAndAccessoris/index.jsx",["252","253","254","255","256","257","258"],"import React, { Component, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeCategoryGetProduct, getProductsBySlug } from \"../../../store/actions/index\";\nimport Card from \"../../../components/UI/Card/index\";\nimport { BiRupee } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport { ClipSpinner, CircleSpinner, DotSpinner,RingSpinner } from '../../../components/UI/Spinner/index'\nimport \"./style.css\";\nimport { generatePublicUrl } from \"../../../urlConfig\";\nimport { connect } from 'react-redux'\n/**\n * @author\n * @function ClothingAndAccessories\n **/\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getProductsBySlug: (slug) => dispatch(getProductsBySlug(slug)),\n    changeCategoryGetProduct: (flag) => dispatch(changeCategoryGetProduct(flag))\n\n  }\n}\n\nclass ClothingAndAccessories extends Component {\n  // const product = useSelector((state) => state.productReducers);\n  // const dispatch = useDispatch();\n\n\n  componentDidMount() {\n    const { match } = this.props;\n    const slug = match.params.slug;\n    this.props.getProductsBySlug(slug);\n    this.props.changeCategoryGetProduct(false)\n\n    // console.log('CHOTHING PAGE PROPS', product);\n  }\n\n  // if (product.loading) {\n  //   return (\n  //     <>\n  //       {/* <ClipSpinner /> */}\n  //       {/* <CircleSpinner /> */}\n  //       <DotSpinner />\n\n  //     </>\n  //   )\n  // }\n  // if (product.categoryChanged) {\n  //   const { match } = props;\n  //   const slug = match.params.slug;\n  //   dispatch(getProductsBySlug(slug));\n  //   console.log('CHOTHING PAGE PROPS', product);\n\n  // }\n  render() {\n    if (this.props.productReducers.loading) {\n      return (\n          <>\n              {/* <ClipSpinner /> */}\n              {/* <CircleSpinner /> */}\n              <DotSpinner />\n\n          </>\n      )\n  }\n    if (this.props.productReducers.categoryChanged) {\n      const { match } = this.props\n      const slug = match.params.slug\n      this.props.getProductsBySlug(slug)\n      console.log('PRODUCT STORE PROPS', this.props.productReducers);\n      this.props.changeCategoryGetProduct(false)\n    }\n    return (\n      <div style={{ padding: \"10px\" }}>\n        <Card\n          style={{\n            boxSizing: \"border-box\",\n            padding: \"10px\",\n            display: \"flex\",\n          }}\n        >\n          {this.props.productReducers.products.map((product, index) => (\n            <div className=\"caContainer\" key={index}>\n              <Link\n                className=\"caImgContainer\"\n                to={`/${product.slug}/${product._id}/p`}\n              >\n                <img src={generatePublicUrl(product.productPictures[0].img)} />\n              </Link>\n              <div>\n                <div className=\"caProductName\">{product.name}</div>\n                <div className=\"caProductPrice\">\n                  <BiRupee />\n                  {product.price}\n                </div>\n              </div>\n            </div>\n          ))}\n        </Card>\n      </div>\n    );\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ClothingAndAccessories);\n","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/containers/OrderDetailsPage/index.jsx",["259"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrder } from \"../../store/actions/index\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\nimport Price from \"../../components/UI/Price\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function OrderDetails\n **/\n\nconst OrderDetailsPage = (props) => {\n  const dispatch = useDispatch();\n  const orderDetails = useSelector((state) => state.userReducer.orderDetails);\n\n  useEffect(() => {\n    console.log({ props });\n    const payload = {\n      orderId: props.match.params.orderId,\n    };\n    dispatch(getOrder(payload));\n  }, []);\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  const formatDate2 = (date) => {\n    const month = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    if (date) {\n      const d = new Date(date);\n      return `${month[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`;\n    }\n  };\n\n  if (!(orderDetails && orderDetails.address)) {\n    return null;\n  }\n\n  return (\n    <Layout>\n      <div\n        style={{\n          width: \"1160px\",\n          margin: \"10px auto\",\n        }}\n      >\n        <Card\n          style={{\n            margin: \"10px 0\",\n          }}\n        >\n          <div className=\"delAdrContainer\">\n            <div className=\"delAdrDetails\">\n              <div className=\"delTitle\">Delivery Address</div>\n              <div className=\"delName\">{orderDetails.address.name}</div>\n              <div className=\"delAddress\">{orderDetails.address.address}</div>\n              <div className=\"delPhoneNumber\">\n                Phone number {orderDetails.address.mobileNumber}\n              </div>\n            </div>\n            <div className=\"delMoreActionContainer\">\n              <div className=\"delTitle\">More Actions</div>\n              <div className=\"delName\">Download Invoice</div>\n            </div>\n          </div>\n        </Card>\n\n        {orderDetails.items.map((item, index) => (\n          <Card\n            key={index} style={{ display: \"flex\", padding: \"20px 0\", margin: \"10px 0\" }}\n          >\n            <div className=\"flexRow\">\n              <div className=\"delItemImgContainer\">\n                <img src={item.productId.productPictures[0].img} alt=\"\" />\n              </div>\n              <div style={{ width: \"250px\" }}>\n                <div className=\"delItemName\">{item.productId.name}</div>\n                <Price value={item.payablePrice} />\n              </div>\n            </div>\n            <div style={{ padding: \"25px 50px\" }}>\n              <div className=\"orderTrack\">\n                {orderDetails.orderStatus.map((status,index) => (\n                  <div\n                  key={index}\n                    className={`orderStatus ${\n                      status.isCompleted ? \"active\" : \"\"\n                    }`}\n                  >\n                    <div\n                      className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                    ></div>\n                    <div className=\"orderInfo\">\n                      <div className=\"status\">{status.type}</div>\n                      <div className=\"date\">{formatDate(status.date)}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div style={{ fontWeight: \"500\", fontSize: 14 }}>\n              {orderDetails.orderStatus[3].isCompleted &&\n                `Delivered on ${formatDate2(orderDetails.orderStatus[3].date)}`}\n            </div>\n          </Card>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default OrderDetailsPage;","/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Price.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Rating.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-frontend/src/components/UI/Cart.jsx",[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":39,"column":49,"nodeType":"266","endLine":39,"endColumn":54},{"ruleId":"264","severity":1,"message":"265","line":40,"column":43,"nodeType":"266","endLine":40,"endColumn":48},{"ruleId":"264","severity":1,"message":"265","line":41,"column":39,"nodeType":"266","endLine":41,"endColumn":44},{"ruleId":"264","severity":1,"message":"265","line":42,"column":57,"nodeType":"266","endLine":42,"endColumn":62},{"ruleId":"267","severity":1,"message":"268","line":16,"column":3,"nodeType":"269","messageId":"270","endLine":89,"endColumn":4},{"ruleId":"271","severity":1,"message":"272","line":13,"column":14,"nodeType":"273","messageId":"274","endLine":13,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":26,"column":16,"nodeType":"273","messageId":"274","endLine":26,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":12,"column":22,"nodeType":"273","messageId":"274","endLine":12,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":10,"column":20,"nodeType":"273","messageId":"274","endLine":10,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":9,"column":24,"nodeType":"273","messageId":"274","endLine":9,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":2,"column":26,"nodeType":"277","messageId":"278","endLine":2,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":46,"column":23,"nodeType":"273","messageId":"274","endLine":46,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":46,"column":41,"nodeType":"273","messageId":"274","endLine":46,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":46,"column":56,"nodeType":"273","messageId":"274","endLine":46,"endColumn":58},{"ruleId":"271","severity":1,"message":"272","line":46,"column":74,"nodeType":"273","messageId":"274","endLine":46,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":55,"column":21,"nodeType":"281","endLine":55,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":84,"column":21,"nodeType":"281","endLine":90,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":105,"column":25,"nodeType":"281","endLine":111,"endColumn":26},{"ruleId":"279","severity":1,"message":"280","line":201,"column":29,"nodeType":"281","endLine":201,"endColumn":33},{"ruleId":"279","severity":1,"message":"280","line":204,"column":29,"nodeType":"281","endLine":204,"endColumn":63},{"ruleId":"279","severity":1,"message":"280","line":239,"column":33,"nodeType":"281","endLine":239,"endColumn":79},{"ruleId":"275","severity":1,"message":"282","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"283","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":15},{"ruleId":"275","severity":1,"message":"284","line":10,"column":10,"nodeType":"277","messageId":"278","endLine":10,"endColumn":21},{"ruleId":"275","severity":1,"message":"285","line":10,"column":23,"nodeType":"277","messageId":"278","endLine":10,"endColumn":36},{"ruleId":"275","severity":1,"message":"286","line":10,"column":38,"nodeType":"277","messageId":"278","endLine":10,"endColumn":48},{"ruleId":"275","severity":1,"message":"283","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":15},{"ruleId":"275","severity":1,"message":"284","line":9,"column":10,"nodeType":"277","messageId":"278","endLine":9,"endColumn":21},{"ruleId":"275","severity":1,"message":"286","line":9,"column":38,"nodeType":"277","messageId":"278","endLine":9,"endColumn":48},{"ruleId":"275","severity":1,"message":"287","line":9,"column":49,"nodeType":"277","messageId":"278","endLine":9,"endColumn":60},{"ruleId":"288","severity":1,"message":"289","line":17,"column":1,"nodeType":"290","endLine":45,"endColumn":2},{"ruleId":"267","severity":1,"message":"268","line":18,"column":5,"nodeType":"269","messageId":"270","endLine":43,"endColumn":6},{"ruleId":"267","severity":1,"message":"268","line":14,"column":3,"nodeType":"269","messageId":"270","endLine":91,"endColumn":4},{"ruleId":"291","severity":1,"message":"292","line":131,"column":5,"nodeType":"293","messageId":"274","endLine":131,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":25,"column":6,"nodeType":"296","endLine":25,"endColumn":8,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":48,"column":19,"nodeType":"281","endLine":51,"endColumn":21},{"ruleId":"275","severity":1,"message":"300","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":37},{"ruleId":"275","severity":1,"message":"301","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":21},{"ruleId":"275","severity":1,"message":"302","line":2,"column":23,"nodeType":"277","messageId":"278","endLine":2,"endColumn":34},{"ruleId":"275","severity":1,"message":"284","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":21},{"ruleId":"275","severity":1,"message":"285","line":7,"column":23,"nodeType":"277","messageId":"278","endLine":7,"endColumn":36},{"ruleId":"275","severity":1,"message":"287","line":7,"column":49,"nodeType":"277","messageId":"278","endLine":7,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":93,"column":17,"nodeType":"281","endLine":93,"endColumn":80},{"ruleId":"294","severity":1,"message":"303","line":25,"column":6,"nodeType":"296","endLine":25,"endColumn":8,"suggestions":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'IoIosCart' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Layout' is defined but never used.","'Loading' is defined but never used.","'ClipSpinner' is defined but never used.","'CircleSpinner' is defined but never used.","'DotSpinner' is defined but never used.","'RingSpinner' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'paymentOption'.","ObjectExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["307"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["308"],"no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},"Update the dependencies array to be: [dispatch]",{"range":"313","text":"314"},"Update the dependencies array to be: [dispatch, props]",{"range":"315","text":"316"},[723,725],"[dispatch]",[671,673],"[dispatch, props]"]