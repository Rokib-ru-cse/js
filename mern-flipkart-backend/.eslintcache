[{"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/index.js":"1","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/App.js":"2","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/reportWebVitals.js":"3","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/index.js":"4","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/initialData.js":"5","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/index.js":"6","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Orders/index.jsx":"7","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Category/index.jsx":"8","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Products/index.jsx":"9","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/HOC/PrivateRoute.jsx":"10","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/index.js":"11","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/actionConstants.js":"12","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/helpers/axios.js":"13","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Home/index.jsx":"14","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Signin/index.jsx":"15","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Signup/index.jsx":"16","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/userauth.reducers.js":"17","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/order.reducer.js":"18","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/auth.reducers.js":"19","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/product.reducer.js":"20","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/category.reducer.js":"21","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/initialData.reducers.js":"22","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/product.action.js":"23","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/userauth.actions.js":"24","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/auth.actions.js":"25","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/category.action.js":"26","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/order.action.js":"27","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/Layout/index.jsx":"28","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/UI/Input/index.jsx":"29","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/urlConfig.js":"30","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/UI/Loading.jsx":"31","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/Header/index.jsx":"32","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Page/index.jsx":"33","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/helpers/linearCategoryList.js":"34","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/page.action.js":"35","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/page.reducer.js":"36","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Products/ProductStore/index.jsx":"37","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/UI/Card/index.jsx":"38"},{"size":644,"mtime":1612279877789,"results":"39","hashOfConfig":"40"},{"size":1843,"mtime":1612713229620,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1612279877789,"results":"42","hashOfConfig":"40"},{"size":343,"mtime":1612378905396,"results":"43","hashOfConfig":"40"},{"size":827,"mtime":1612813679750,"results":"44","hashOfConfig":"40"},{"size":707,"mtime":1612813915867,"results":"45","hashOfConfig":"40"},{"size":4116,"mtime":1612898853243,"results":"46","hashOfConfig":"40"},{"size":18514,"mtime":1612713393691,"results":"47","hashOfConfig":"40"},{"size":469,"mtime":1612516560866,"results":"48","hashOfConfig":"40"},{"size":406,"mtime":1612279877785,"results":"49","hashOfConfig":"40"},{"size":193,"mtime":1612416027264,"results":"50","hashOfConfig":"40"},{"size":2761,"mtime":1612813531981,"results":"51","hashOfConfig":"40"},{"size":982,"mtime":1612418329002,"results":"52","hashOfConfig":"40"},{"size":682,"mtime":1612420162879,"results":"53","hashOfConfig":"40"},{"size":2687,"mtime":1612419180697,"results":"54","hashOfConfig":"40"},{"size":4259,"mtime":1612713350123,"results":"55","hashOfConfig":"40"},{"size":886,"mtime":1612279877793,"results":"56","hashOfConfig":"40"},{"size":343,"mtime":1612813851445,"results":"57","hashOfConfig":"40"},{"size":1634,"mtime":1612279877793,"results":"58","hashOfConfig":"40"},{"size":713,"mtime":1612279877793,"results":"59","hashOfConfig":"40"},{"size":2942,"mtime":1612381993088,"results":"60","hashOfConfig":"40"},{"size":391,"mtime":1612713250736,"results":"61","hashOfConfig":"40"},{"size":2586,"mtime":1612823731162,"results":"62","hashOfConfig":"40"},{"size":2493,"mtime":1612425432574,"results":"63","hashOfConfig":"40"},{"size":3129,"mtime":1612713318439,"results":"64","hashOfConfig":"40"},{"size":2360,"mtime":1612713307899,"results":"65","hashOfConfig":"40"},{"size":1342,"mtime":1612814496098,"results":"66","hashOfConfig":"40"},{"size":1318,"mtime":1612382307638,"results":"67","hashOfConfig":"40"},{"size":702,"mtime":1612376573360,"results":"68","hashOfConfig":"40"},{"size":164,"mtime":1612903522257,"results":"69","hashOfConfig":"40"},{"size":503,"mtime":1612279877789,"results":"70","hashOfConfig":"40"},{"size":2072,"mtime":1612713413191,"results":"71","hashOfConfig":"40"},{"size":7073,"mtime":1612505578946,"results":"72","hashOfConfig":"40"},{"size":430,"mtime":1612384292798,"results":"73","hashOfConfig":"40"},{"size":797,"mtime":1612713283659,"results":"74","hashOfConfig":"40"},{"size":782,"mtime":1612505430902,"results":"75","hashOfConfig":"40"},{"size":11296,"mtime":1612824357069,"results":"76","hashOfConfig":"40"},{"size":506,"mtime":1612813397183,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1jw4wfb",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/index.js",[],["164","165"],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/App.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/reportWebVitals.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/index.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/initialData.js",["166"],"import axios from \"../../helpers/axios\";\nimport { categoryConstants, productConstants } from \"./actionConstants\";\n\nconst getInitialData = ()=>{\n    return async (dispatch)=>{\n        \n        const res = await axios.post('/initialdata')\n        const {products,categories} = res.data\n        if(res.status==200){\n            dispatch({\n                type:categoryConstants.GET_CATEGORY_SUCCESS,\n                payload:{categories}\n            })\n            dispatch({\n                type:productConstants.GET_PRODUCT_SUCCESS,\n                payload:[...products]\n                \n            })\n        }\n    }    \n}\nexport {\n    getInitialData\n}","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/index.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Orders/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Category/index.jsx",["167","168","169","170","171"],"import React, { Component } from 'react'\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap'\nimport Layout from '../../components/Layout/index'\nimport { connect } from 'react-redux'\nimport Input from '../../components/UI/Input/index'\nimport Loading from '../../components/UI/Loading'\nimport { IoIosAdd, IoIosCloudUpload, IoIosTrash } from 'react-icons/io'\nimport { getAllCategory, addCategory, updateCategories, deleteCategories } from '../../store/actions'\nimport CheckboxTree from 'react-checkbox-tree'\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport './style.css'\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addCategory: (form) => dispatch(addCategory(form)),\n        updateCategories: (form) => dispatch(updateCategories(form)),\n        getAllCategory: () => dispatch(getAllCategory()),\n        deleteCategories: (idsArray) => dispatch(deleteCategories(idsArray))\n    }\n}\nclass index extends Component {\n    state = {\n        show: false,\n        updateCategoryModal: false,\n        deleteCategoryModal: false,\n        category: '',\n        parent: '',\n        catimg: '',\n        checked: [],\n        expanded: [],\n        checkedArray: [],\n        expandedArray: [],\n    }\n    renderCategories = (allcategories) => {\n        let categories = []\n        for (let category of allcategories) {\n            categories.push(\n                {\n                    value: category._id,\n                    label: category.name,\n                    children: category.children.length > 0 && this.renderCategories(category.children),\n                }\n            )\n        }\n        return categories\n    }\n    categoryList = (categories, cat = []) => {\n\n        for (let category of categories) {\n            cat.push({\n                value: category._id,\n                name: category.name,\n                parentId: category.parentId,\n                type:category.type\n            })\n            if (category.children.length > 0) {\n                this.categoryList(category.children, cat)\n            }\n        }\n        return cat\n    }\n    handleForm = () => {\n        const form = new FormData()\n        if (this.state.category === '') {\n            alert(\"Name is required\")\n            return\n        }\n        form.append('name', this.state.category)\n        form.append('parentId', this.state.parent)\n        form.append('categoryImage', this.state.catimg)\n        this.props.addCategory(form)\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    handleCategoryImage = (e) => {\n        this.setState({\n            catimg: e.target.files[0]\n        })\n    }\n    handleUpdateCategory = (e, index, type) => {\n        if (type === 'checked') {\n            const newCheckedArray = this.state.checkedArray.map((item, _index) => _index == index ? { ...item, [e.target.name]: e.target.value } : item)\n            this.setState({\n                checkedArray: newCheckedArray\n            })\n        }\n        else if (type === 'expanded') {\n            const newExpandedArray = this.state.expandedArray.map((item, _index) => _index == index ? { ...item, [e.target.name]: e.target.value } : item)\n            this.setState({\n                expandedArray: newExpandedArray\n            })\n        }\n    }\n    updateCategoriesForm = () => {\n        var formData = new FormData()\n        this.state.expandedArray.forEach((item, index) => {\n            formData.append('_id', item.value);\n            formData.append('name', item.name);\n            formData.append('type', item.type);\n            formData.append('parentId', item.parentId ? item.parentId : \"\");\n\n        })\n        this.state.checkedArray.forEach((item, index) => {\n            formData.append('_id', item.value);\n            formData.append('name', item.name);\n            formData.append('type', item.type);\n            formData.append('parentId', item.parentId ? item.parentId : \"\");\n        })\n        this.props.updateCategories(formData)\n        this.setState({ updateCategoryModal: !this.state.updateCategoryModal })\n    }\n    updateCheckedAndExpandedCategories = () => {\n        const categories = this.categoryList(this.props.categoryReducers.categories)\n        this.state.checked.length > 0 && this.state.checked.forEach((categoryId, index) => {\n            const category = categories.find((cat, _index) => cat.value == categoryId)\n            this.state.checkedArray.push(category)\n        })\n        this.state.expanded.length > 0 && this.state.expanded.forEach((categoryId, index) => {\n            const category = categories.find((cat, _index) => cat.value == categoryId)\n            this.state.expandedArray.push(category)\n        })\n    }\n    updateCategory = () => {\n        this.updateCheckedAndExpandedCategories()\n        this.setState({\n            updateCategoryModal: !this.state.updateCategoryModal\n        })\n    }\n    deleteCategory = () => {\n        this.updateCheckedAndExpandedCategories()\n        this.setState({ deleteCategoryModal: !this.state.deleteCategoryModal })\n    }\n    confirmDeleteCategory = () => {\n        const expandedIdsArray = this.state.expandedArray.map(item => ({ _id: item.value }))\n        const checkedIdsArray = this.state.checkedArray.map(item => ({ _id: item.value }))\n        const idsArray = expandedIdsArray.concat(checkedIdsArray)\n        if (this.state.checkedArray.length > 0) {\n            this.props.deleteCategories(checkedIdsArray)\n        }\n        this.setState({ deleteCategoryModal: !this.state.deleteCategoryModal })\n    }\n    handleUpdateCategoryModal = () => {\n        this.props.getAllCategory()\n        this.setState({ updateCategoryModal: !this.state.updateCategoryModal })\n    }\n    handleDeleteCategoryModal = () => {\n        this.props.getAllCategory()\n        this.setState({ deleteCategoryModal: !this.state.deleteCategoryModal })\n    }\n    renderAddCategoryModal = () => {\n        return (\n            <Modal show={this.state.show} onHide={() => this.setState({ show: !this.state.show })}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add new Category</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col>\n                            <Input\n                                value={this.state.category}\n                                placeholder=\"add category\"\n                                onChange={(e) => this.handleChange(e)}\n                                name=\"category\"\n                                className=\"form-control-sm\"\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                value={this.state.parent}\n                                onChange={(e) => this.handleChange(e)}\n                                name=\"parent\"\n                                className=\"form-control form-control-sm\" >\n                                <option>select parent </option>\n                                {\n                                    this.categoryList(this.props.categoryReducers.categories).map((item, index) => {\n                                        return (\n                                            <option key={index} value={item.value}>{item.name}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <input type=\"file\" name=\"categoryImage\" onChange={(e) => this.handleCategoryImage(e)} />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className=\"btn-sm\" variant=\"outline-danger\" onClick={() => this.setState({ show: !this.state.show })}>\n                        Close\n          </Button>\n                    <Button className=\"btn-sm\" variant=\"outline-success\" onClick={this.handleForm}>\n                        Save\n          </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    rednerDeleteCategoryModal = () => {\n        return (\n            <Modal show={this.state.deleteCategoryModal} onHide={this.handleDeleteCategoryModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Confirm Deletion</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h2 className=\"text-danger text-center\">Expanded</h2>\n                    {\n                        this.state.expandedArray.map((item, index) => <span key={index}>{item.name}    </span>)\n                    }\n                    <h2 className=\"text-danger text-center\">Checked</h2>\n                    {\n                        this.state.checkedArray.map((item, index) => <span key={index}>{item.name}    </span>)\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" onClick={this.handleDeleteCategoryModal}>\n                        Close\n                </Button>\n                    <Button variant=\"danger\" onClick={this.confirmDeleteCategory}>\n                        Done\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    renderUpdateCategoryModal = () => {\n        return (\n            <Modal size=\"lg\" show={this.state.updateCategoryModal} onHide={this.handleUpdateCategoryModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Categories</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col>\n                            <h6>Expended</h6>\n                        </Col>\n\n                    </Row>\n                    {\n                        this.state.expandedArray.length > 0 &&\n                        this.state.expandedArray.map((category, index) => {\n                            return (\n                                <Row key={index}>\n                                    <Col>\n                                        <Input\n                                            value={category.name}\n                                            placeholder=\"Category Name\"\n                                            onChange={(e) => this.handleUpdateCategory(e, index, 'expanded')}\n                                            name=\"name\"\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <select\n                                            value={category.parentId}\n                                            onChange={(e) => this.handleUpdateCategory(e, index, 'expanded')}\n                                            name=\"parentId\"\n                                            className=\"form-control\" >\n                                            <option>select parent </option>\n                                            {\n                                                this.categoryList(this.props.categoryReducers.categories).map((item, index) => {\n                                                    return (\n                                                        <option key={index} value={item.value}>{item.name}</option>\n                                                    )\n                                                })\n                                            }\n                                        </select>\n                                    </Col>\n                                    <Col>\n                                        <select \n                                            className=\"form-control\"\n                                            value={category.type}\n                                            name=\"type\"\n                                            onChange={(e) => this.handleUpdateCategory(e, index, 'expanded')}\n                                            >\n                                            <option value=\"\">Select Type</option>\n                                            <option value=\"store\">Store</option>\n                                            <option value=\"product\">Product</option>\n                                            <option value=\"page\">Page</option>\n                                        </select>\n                                    </Col>\n                                </Row>\n\n\n                            )\n                        })\n                    }\n                    <Row>\n                        <Col>\n                            <h6>Checked</h6>\n                        </Col>\n\n                    </Row>\n                    {\n                        this.state.checkedArray.length > 0 &&\n                        this.state.checkedArray.map((category, index) => {\n                            return (\n                                <Row key={index}>\n                                    <Col>\n                                        <Input\n                                            value={category.name}\n                                            placeholder=\"Category Name\"\n                                            onChange={(e) => this.handleUpdateCategory(e, index, 'checked')}\n                                            name=\"name\"\n\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <select\n                                            value={category.parentId}\n                                            onChange={(e) => this.handleUpdateCategory(e, index, 'checked')}\n                                            name=\"parentId\"\n                                            className=\"form-control\" >\n                                            <option>select parent </option>\n                                            {\n                                                this.categoryList(this.props.categoryReducers.categories).map((item, index) => {\n                                                    return (\n                                                        <option key={index} value={item.value}>{item.name}</option>\n                                                    )\n                                                })\n                                            }\n                                        </select>\n                                    </Col>\n                                    <Col>\n                                        <select \n                                            className=\"form-control\"\n                                            name=\"type\"\n                                            value={category.type}\n                                            onChange={(e) => this.handleUpdateCategory(e, index, 'checked')}\n                                            >\n                                            <option value=\"\">Select Type</option>\n                                            <option value=\"store\">Store</option>\n                                            <option value=\"product\">Product</option>\n                                            <option value=\"page\">Page</option>\n                                        </select>\n                                    </Col>\n                                </Row>\n\n\n                            )\n                        })\n                    }\n                    <input type=\"file\" name=\"categoryImage\" onChange={(e) => this.handleCategoryImage(e)} />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" onClick={this.handleUpdateCategoryModal}>\n                        Close\n                    </Button>\n                    <Button variant=\"outline-primary\" onClick={this.updateCategoriesForm}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n    render() {\n        if(this.props.categoryReducers.loading){\n            return(\n                <Loading />\n            )\n        }\n        return (\n            <Layout sidebar>\n                <Container>\n                    <Row>\n                        <Col md={12}>\n                            <div className=\"d-flex justify-content-between\">\n                                <h3>Category</h3>\n                                <div className=\"actionBtnContainer\">\n                                    <span>Actions : </span>\n                                    <button onClick={() => this.setState({ show: !this.state.show })} className=\"btn btn-outline-primary\"><IoIosAdd /><span> Add</span></button>\n                                    <button onClick={this.updateCategory} className=\"btn btn-outline-info\"><IoIosCloudUpload /><span> Update</span></button>\n                                    <button onClick={this.deleteCategory} className=\"btn btn-outline-danger\"><IoIosTrash /><span> Delete</span></button>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <div className=\"d-flex justify-content-between\">\n                                <CheckboxTree\n                                    nodes={this.renderCategories(this.props.categoryReducers.categories)}\n                                    checked={this.state.checked}\n                                    expanded={this.state.expanded}\n                                    onCheck={checked => this.setState({ checked })}\n                                    onExpand={expanded => this.setState({ expanded })}\n                                    iconsClass=\"fa5\"\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n                {this.renderAddCategoryModal()}\n                {this.renderUpdateCategoryModal()}\n                {this.rednerDeleteCategoryModal()}\n            </Layout >\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index)\n","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Products/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/HOC/PrivateRoute.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/index.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/actionConstants.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/helpers/axios.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Home/index.jsx",["172","173","174","175"],"import React, { Component } from 'react'\nimport { Col, Container, Jumbotron, Row } from 'react-bootstrap'\nimport Layout from '../../components/Layout'\nimport './style.css'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\nclass index extends Component {\n    render() {\n        if (!this.props.authReducers.authenticate) {\n            return (\n                <Redirect to='/signin' />\n            )\n        }\n\n        return (\n            <Layout sidebar>\n                <h1>home</h1>\n\n            </Layout>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(index)\n","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Signin/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Signup/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/userauth.reducers.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/order.reducer.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/auth.reducers.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/product.reducer.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/category.reducer.js",["176","177","178"],"import Loading from \"../../components/UI/Loading\";\nimport { categoryConstants } from \"../actions/actionConstants\";\n\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategories =(parentId,categories,category)=>{\n\n  let myCategory = []\n\n  if(parentId==undefined){\n    return [\n      ...categories,\n      {\n        _id:category._id,\n        name:category.name,\n        slug:category.slug,\n        type:category.type,\n        children:[]\n      }\n    ]\n  }\n\n  for(let cat of categories){\n    if(cat._id == parentId){\n\n      const newCategory = {\n        _id: category._id,\n        name:category.name,\n        slug:category.slug,\n        type:category.type,\n        parentId:category.parentId,\n        children:[]\n      }\n\n      myCategory.push({\n        ...cat,\n        children:cat.children.length>0 ? [...cat.children,newCategory]:[newCategory]\n      }) \n    }else{\n    myCategory.push({\n      ...cat,\n      children:cat.children ? buildNewCategories(parentId,cat.children,category) : []\n    })\n  } \n}\n\n  return myCategory\n}\n\nconst categoryReducers = (state = initState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_CATEGORY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case categoryConstants.GET_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        categories: action.payload.categories,\n      };\n\n    case categoryConstants.GET_CATEGORY_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    case categoryConstants.ADD_CATEGORY_REQUEST:\n      return{\n        ...state,\n        loading:true\n      }\n    case categoryConstants.ADD_CATEGORY_SUCCESS:\n      const category = action.payload.category\n      return{\n        ...state,\n        categories : buildNewCategories(category.parentId,state.categories,category),\n        loading:false\n      }\n    case categoryConstants.ADD_CATEGORY_FAILURE:\n      return{\n        ...initState,\n        loading:false\n      }\n    case categoryConstants.UPDATE_CATEGORIES_REQUEST:\n      return{\n        ...initState,\n        loading:true\n      }\n    case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\n      return{\n        ...initState,\n        loading:false\n      }\n    case categoryConstants.UPDATE_CATEGORIES_FAILURE:\n      return {\n        ...initState,\n        loading:false,\n        error:action.payload.error\n      }\n      case categoryConstants.DELETE_CATEGORIES_REQUEST:\n        return{\n          ...initState,\n          loading:true\n        }\n      case categoryConstants.DELETE_CATEGORIES_SUCCESS:\n        return{\n          ...initState,\n          loading:false\n        }\n      case categoryConstants.DELETE_CATEGORIES_FAILURE:\n        return {\n          ...initState,\n          loading:false,\n          error:action.payload.error\n        }\n\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducers;\n","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/initialData.reducers.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/product.action.js",["179","180"],"import axios from \"../../helpers/axios\";\nimport { productConstants } from \"./actionConstants\";\n\nexport const addProduct = (form)=>{\n    return async (dispatch)=>{\n        dispatch({type:productConstants.ADD_PRODUCT_REQUEST})\n        \n        const res = await axios.post('/products',form)\n        if(res.status==201){\n            dispatch({\n                type:productConstants.ADD_PRODUCT_SUCCESS,\n                payload:res.data.message\n            })\n        }else{\n            dispatch({\n                type:productConstants.ADD_PRODUCT_FAILURE,\n                payload:res.data.error\n            })\n        }\n    }    \n}\n\nexport const getProductPage = (payload)=>{\n    return async (dispatch)=>{\n        const {cid,type} = payload\n        dispatch({type:productConstants.ADD_PRODUCT_REQUEST})\n        const res = await axios.post(`/page/${cid}/${type}`)\n        // if(res.status==201){\n        //     dispatch({\n        //         type:productConstants.ADD_PRODUCT_SUCCESS,\n        //         payload:res.data.message\n        //     })\n        // }else{\n        //     dispatch({\n        //         type:productConstants.ADD_PRODUCT_FAILURE,\n        //         payload:res.data.error\n        //     })\n        // }\n    }    \n}","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/userauth.actions.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/auth.actions.js",["181"],"import axios from \"../../helpers/axios\";\n// import { API } from \"../../urlConfig\";\nimport { authConstants } from \"./actionConstants\";\nimport { getAllCategory } from \"./category.action\";\nimport { getInitialData } from \"./initialData\";\n\nexport const login = (user) => {\n    return async(dispatch) => {\n        dispatch({\n            type: authConstants.LOGIN_REQUEST,\n        });\n        const res = await axios.post(`/admin/signin/`, {\n            ...user,\n        });\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem(\"token\", token);\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user,\n                },\n            });\n            dispatch(getAllCategory())\n            dispatch(getInitialData())\n        } else {\n            dispatch({\n                type: authConstants.LOGIN_FAILURE,\n                payload: {\n                    error: res.data.error,\n                },\n            });\n        }\n    };\n};\n\nexport const isUserLoggedIn = () => {\n    return async(dispatch) => {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            const user = JSON.parse(localStorage.getItem(\"user\"));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user,\n                },\n            });\n            dispatch(getAllCategory())\n            dispatch(getInitialData())\n        } else {\n            dispatch({\n                type: authConstants.LOGIN_FAILURE,\n                payload: {\n                    error: \"failed to login\",\n                },\n            });\n        }\n    };\n};\n\nexport const userLogOut = () => {\n    return async(dispatch) => {\n        dispatch({\n            type: authConstants.LOGOUT_REQUEST,\n        });\n\n        const res = await axios.post(`/admin/signout`);\n        if (res.status == 200) {\n            localStorage.clear();\n            dispatch({\n                type: authConstants.LOGOUT_SUCCESS,\n            });\n        } \n        else {\n            dispatch({\n                type: authConstants.LOGOUT_FAILURE,\n                payload: {\n                    error: res.data.error\n                }\n            });\n        }\n    };\n}; \n\nexport const signup = (user) => {\n    return async(dispatch) => {\n        dispatch({\n            type: authConstants.SIGNUP_REQUEST,\n        });\n        const res = await axios.post(`/admin/signup/`, {\n            ...user,\n        });\n        if (res.status === 201) {\n            const { message } = res.data.user;\n\n            dispatch({\n                type: authConstants.SIGNUP_SUCCESS,\n                payload: {\n                    message,\n                },\n            });\n        } else {\n            dispatch({\n                type: authConstants.SIGNUP_FAILURE,\n                payload: {\n                    error: res.data.error,\n                },\n            });\n        }\n    };\n};","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/category.action.js",["182","183","184","185"],"import axios from \"../../helpers/axios\";\nimport { categoryConstants } from \"./actionConstants\";\n\nconst getAllCategory = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: categoryConstants.GET_CATEGORY_REQUEST,\n    });\n    const res = await axios.get(\"/categories\");\n    if (res.status == 200) {\n      dispatch({\n        type: categoryConstants.GET_CATEGORY_SUCCESS,\n        payload: {\n          categories: res.data.categories,\n        },\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_CATEGORY_FAILURE,\n        payload: {\n          error: res.data.error,\n        },\n      });\n    }\n  };\n};\n\nexport const addCategory = (form) => {\n  return async (dispatch) => {\n    dispatch({\n      type: categoryConstants.ADD_CATEGORY_REQUEST,\n    });\n    try {\n      const res = await axios.post(\"/categories\", form);\n      if (res.status == 201) {\n        dispatch({\n          type: categoryConstants.ADD_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryConstants.ADD_CATEGORY_FAILURE,\n          payload: res.data.error,\n        });\n      }\n    } catch (error) {\n      \n      console.log('category action page',error.response);\n    }\n\n  };\n};\n\nexport const updateCategories = (form) => {\n  return async (dispatch) => {\n    dispatch({type:categoryConstants.UPDATE_CATEGORIES_REQUEST})\n    const res = await axios.post(\"/categories/update\", form);\n    if (res.status == 201) {\n      dispatch({type:categoryConstants.UPDATE_CATEGORIES_SUCCESS})\n      dispatch(getAllCategory())\n    } else {\n      const {error} = res.data\n      dispatch({\n        type:categoryConstants.UPDATE_CATEGORIES_FAILURE,\n        payload:{error}\n      })\n    }\n  };\n};\n\nexport const deleteCategories = (idsArray) => {\n  return async (dispatch) => {\n    dispatch({type:categoryConstants.DELETE_CATEGORIES_REQUEST})\n    const res = await axios.post(\"/categories/delete\", {\n      payload: {\n        idsArray\n      }\n    });\n    if (res.status == 200) {\n      dispatch({type:categoryConstants.DELETE_CATEGORIES_SUCCESS})\n      dispatch(getAllCategory())\n    } else {\n      const {error} = res.data\n      dispatch({\n        type:categoryConstants.DELETE_CATEGORIES_FAILURE,\n        payload:{error}\n      })\n    }\n  };\n};\n\nexport {\n  getAllCategory\n}","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/order.action.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/Layout/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/UI/Input/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/urlConfig.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/UI/Loading.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/Header/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Page/index.jsx",["186","187","188"],"import React, { Component } from 'react'\nimport { Modal, Row, Col, Button } from 'react-bootstrap'\nimport Layout from '../../components/Layout/index'\nimport Input from '../../components/UI/Input/index'\nimport linearCategoryList from '../../helpers/linearCategoryList'\nimport { connect } from 'react-redux'\nimport {createPage} from '../../store/actions/index'\nimport Loading from '../../components/UI/Loading'\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createPage : (formData)=>dispatch(createPage(formData))\n    }\n}\nexport class index extends Component {\n\n    state = {\n        createPageModal: false,\n        title: '',\n        category: '',\n        type:\"\",\n        description:'',\n        categories: [],\n        banners: [],\n        products: []\n    }\n    componentDidMount() {\n        this.setState({\n            categories: linearCategoryList(this.props.categoryReducers.categories)\n        })\n    }\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        if(e.target.name == 'category'){\n            const cate = this.state.categories.find(item=>item.value==e.target.value)\n            this.setState({\n                type:cate.type\n            })\n        }\n    }\n    handleBannerImages = (e) => {\n        this.setState({\n            banners: [...this.state.banners, e.target.files[0]]\n        })\n    }\n    handleProductImages = (e) => {\n        this.setState({\n            products: [...this.state.products, e.target.files[0]]\n        })\n    }\n\n    pageCreate = () => {\n        if(this.state.title==''){\n            alert(\"Title is required\")\n            return\n        }\n        const formData = new FormData()\n        formData.append('title',this.state.title)\n        formData.append('description',this.state.description)\n        formData.append('category',this.state.category)\n        formData.append('type',this.state.type)\n        this.state.banners.forEach((banner,index)=>{\n            formData.append('banners',banner)\n        })\n        this.state.products.forEach((product,index)=>{\n            formData.append('products',product)\n        })\n        this.props.createPage(formData)\n    }\n\n    renderCreatePageModal = () => {\n        return (\n            <Modal show={this.state.createPageModal} onHide={() => this.setState({ createPageModal: !this.state.createPageModal })}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create New Page</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col>\n                            <select\n                                className=\"form-control form-control-sm\"\n                                name=\"category\"\n                                onChange={(e) => this.handleInputChange(e)}\n                            >\n                                <option value=\"\">Select category</option>\n                                {\n                                    this.state.categories.map((item, index) => {\n                                        return (\n                                            <option key={index} value={item.value}>{item.name}</option>\n                                        )\n                                    })\n                                }\n                            </select>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Input\n                                value={this.state.title}\n                                name=\"title\"\n                                onChange={(e) => this.handleInputChange(e)}\n                                placeholder=\"Page Title\"\n                                className=\"form-control-sm\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Input\n                                value={this.state.description}\n                                name=\"description\"\n                                onChange={(e) => this.handleInputChange(e)}\n                                placeholder=\"Page description\"\n                                className=\"form-control-sm\"\n                            />\n                        </Col>\n                    </Row>\n                    {\n                        this.state.banners.length > 0 ?\n                            this.state.banners.map((item, i) => {\n                                return (\n                                    <Row key={i}>\n                                        <Col>{item.name}</Col>\n                                    </Row>\n                                )\n                            }) : null\n                    }\n                    <Row>\n                        <Col>\n                            <Input\n                                className=\"form-control form-control-sm\"\n                                type=\"file\"\n                                name=\"banners\"\n                                onChange={(e) => this.handleBannerImages(e)}\n                            />\n                        </Col>\n                    </Row>\n                    {\n                        this.state.products.length > 0 ?\n                            this.state.products.map((item, i) => {\n                                return (\n                                    <Row key={i}>\n                                        <Col>{item.name}</Col>\n                                    </Row>\n                                )\n                            }) : null\n                    }\n                    <Row>\n                        <Col>\n                            <Input\n                                className=\"form-control form-control-sm\"\n                                type=\"file\"\n                                name=\"products\"\n                                onChange={(e) => this.handleProductImages(e)}\n                            />\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" onClick={()=>this.setState({ createPageModal: !this.state.createPageModal })}>\n                        Close\n                </Button>\n                    <Button variant=\"danger\" onClick={this.pageCreate}>\n                        Done\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n\n\n    render() {\n        if(this.props.pageReducers.loading){\n            return(\n                <Loading/>\n            )\n        }\n        return (\n            <Layout sidebar>\n                {this.renderCreatePageModal()}\n                <button onClick={() => this.setState({ createPageModal: !this.state.createPageModal })}>xxxxxxxxxxx</button>\n            </Layout>\n        )\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(index)\n","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/helpers/linearCategoryList.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/actions/page.action.js",["189"],"import axios from \"../../helpers/axios\"\nimport { pageConstants } from \"./actionConstants\"\n\nexport const createPage = (formData) => {\n    return async (dispatch) => {\n        dispatch({ type: pageConstants.CREATE_PAGE_REQUEST })\n        try {\n            const res = await axios.post('/page/create', formData)\n            if (res.status == 201) {\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_SUCCESS,\n                    payload: { page: res.data.page }\n                })\n            } else {\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_FAILURE,\n                    payload: { error: res.data.error }\n                })\n            }\n        } catch (error) {\n            console.log('page action page',error);\n        }\n    }\n}","/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/store/reducers/page.reducer.js",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/containers/Products/ProductStore/index.jsx",[],"/home/rokibrucse/Documents/mern-flipkart/mern-backend/src/components/UI/Card/index.jsx",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":9,"column":22,"nodeType":"196","messageId":"197","endLine":9,"endColumn":24},{"ruleId":"194","severity":1,"message":"195","line":89,"column":90,"nodeType":"196","messageId":"197","endLine":89,"endColumn":92},{"ruleId":"194","severity":1,"message":"195","line":95,"column":92,"nodeType":"196","messageId":"197","endLine":95,"endColumn":94},{"ruleId":"194","severity":1,"message":"195","line":122,"column":73,"nodeType":"196","messageId":"197","endLine":122,"endColumn":75},{"ruleId":"194","severity":1,"message":"195","line":126,"column":73,"nodeType":"196","messageId":"197","endLine":126,"endColumn":75},{"ruleId":"198","severity":1,"message":"199","line":143,"column":15,"nodeType":"200","messageId":"201","endLine":143,"endColumn":23},{"ruleId":"198","severity":1,"message":"202","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":13},{"ruleId":"198","severity":1,"message":"203","line":2,"column":15,"nodeType":"200","messageId":"201","endLine":2,"endColumn":24},{"ruleId":"198","severity":1,"message":"204","line":2,"column":26,"nodeType":"200","messageId":"201","endLine":2,"endColumn":35},{"ruleId":"198","severity":1,"message":"205","line":2,"column":37,"nodeType":"200","messageId":"201","endLine":2,"endColumn":40},{"ruleId":"198","severity":1,"message":"206","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":15},{"ruleId":"194","severity":1,"message":"195","line":14,"column":14,"nodeType":"196","messageId":"197","endLine":14,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":28,"column":16,"nodeType":"196","messageId":"197","endLine":28,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":9,"column":22,"nodeType":"196","messageId":"197","endLine":9,"endColumn":24},{"ruleId":"198","severity":1,"message":"207","line":27,"column":15,"nodeType":"200","messageId":"201","endLine":27,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":71,"column":24,"nodeType":"196","messageId":"197","endLine":71,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":10,"column":20,"nodeType":"196","messageId":"197","endLine":10,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":35,"column":22,"nodeType":"196","messageId":"197","endLine":35,"endColumn":24},{"ruleId":"194","severity":1,"message":"195","line":60,"column":20,"nodeType":"196","messageId":"197","endLine":60,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":81,"column":20,"nodeType":"196","messageId":"197","endLine":81,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":41,"column":26,"nodeType":"196","messageId":"197","endLine":41,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":42,"column":69,"nodeType":"196","messageId":"197","endLine":42,"endColumn":71},{"ruleId":"194","severity":1,"message":"195","line":60,"column":28,"nodeType":"196","messageId":"197","endLine":60,"endColumn":30},{"ruleId":"194","severity":1,"message":"195","line":9,"column":28,"nodeType":"196","messageId":"197","endLine":9,"endColumn":30},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'idsArray' is assigned a value but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Container' is defined but never used.","'Jumbotron' is defined but never used.","'Row' is defined but never used.","'Loading' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]